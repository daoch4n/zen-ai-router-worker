name: Deploy Cloudflare Workers

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed] # Add closed to handle cleanup
  repository_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - uses: actions/checkout@v4
      - name: Prepare Worker Environment Variables
        id: api_keys_collection
        run: |
          ALL_API_KEYS_JSON='${{ secrets.ALL_API_KEYS_JSON }}'
          API_KEYS_ARRAY=($(echo "$ALL_API_KEYS_JSON" | flatpak-spawn --host jq -r '.[]'))
          ALL_KEYS=$(printf "%s," "${API_KEYS_ARRAY[@]}")
          echo "all_api_keys=${ALL_KEYS%,}" >> $GITHUB_OUTPUT
          echo "all_api_keys_count=${#API_KEYS_ARRAY[@]}" >> $GITHUB_OUTPUT
      - name: Deploy Dynamic src Workers (Production)
        run: |
          IFS=',' read -r -a API_KEYS <<< "${{ steps.api_keys_collection.outputs.all_api_keys }}"
          TOTAL_KEYS=${{ steps.api_keys_collection.outputs.all_api_keys_count }}
          KEYS_PER_WORKER=8
          NUM_WORKERS=$(( (TOTAL_KEYS + KEYS_PER_WORKER - 1) / KEYS_PER_WORKER ))

          for i in $(seq 0 $((NUM_WORKERS - 1))); do
            WORKER_NAME="zen-ai-router-worker-${i}"
            START_INDEX=$((i * KEYS_PER_WORKER))
            END_INDEX=$((START_INDEX + KEYS_PER_WORKER - 1))
            
            WORKER_VARS=""
            # Calculate the actual end index for the current worker
            CURRENT_WORKER_END_INDEX=$((END_INDEX < TOTAL_KEYS ? END_INDEX : TOTAL_KEYS - 1))

            for ((j=START_INDEX; j<=CURRENT_WORKER_END_INDEX; j++)); do
              if [ -n "${API_KEYS[j]}" ]; then
                KEY_INDEX=$((j - START_INDEX + 1))
                ESCAPED_API_KEY=$(printf "%q" "${API_KEYS[j]}")
                WORKER_VARS="${WORKER_VARS} --var KEY${KEY_INDEX}:${ESCAPED_API_KEY}"
              fi
            done

            echo "Deploying ${WORKER_NAME} with keys from index ${START_INDEX} to ${END_INDEX}"
            flatpak-spawn --host wrangler deploy --name "${WORKER_NAME}" \
              --compatibility-date "2024-05-01" \
              --main "src/worker.mjs" \
              ${WORKER_VARS}
          done
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          PASS: ${{ secrets.PASS }}
      - name: Generate Orchestrator Wrangler Config (Production)
        run: |
          TOTAL_KEYS=${{ steps.api_keys_collection.outputs.all_api_keys_count }}
          KEYS_PER_WORKER=8
          NUM_WORKERS=$(( (TOTAL_KEYS + KEYS_PER_WORKER - 1) / KEYS_PER_WORKER ))

          CONFIG_CONTENT="name = \"router-orchestrator\"\n"
          CONFIG_CONTENT+="main = \"src/index.mjs\"\n"
          CONFIG_CONTENT+="compatibility_date = \"2024-05-01\"\n\n"

          for i in $(seq 0 $((NUM_WORKERS - 1))); do
            CONFIG_CONTENT+="[[services]]\n"
            CONFIG_CONTENT+="binding = \"BACKEND_SERVICE_${i}\"\n"
            CONFIG_CONTENT+="service = \"zen-ai-router-worker-${i}\"\n\n"
          done

          CONFIG_CONTENT+="[[durable_objects.bindings]]\n"
          CONFIG_CONTENT+="name = \"ROUTER_COUNTER\"\n"
          CONFIG_CONTENT+="class_name = \"RouterCounter\"\n\n"
          CONFIG_CONTENT+="[[migrations]]\n"
          CONFIG_CONTENT+="tag = \"v1\"\n"
          CONFIG_CONTENT+="new_classes = [\"RouterCounter\"]\n"
          echo -e "$CONFIG_CONTENT" > orchestrator/wrangler.toml
      - name: Copy wrangler.toml.example
        run: cp wrangler.toml.example wrangler.toml
      - name: Build & Deploy Worker
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}

  deploy_preview:
    runs-on: ubuntu-latest
    name: Deploy Preview
    if: github.event.action != 'closed' # Don't deploy if the PR is closed
    steps:
      - uses: actions/checkout@v4

      - name: Prepare Worker Environment Variables
        id: api_keys_collection
        run: |
          ALL_API_KEYS_JSON='${{ secrets.ALL_API_KEYS_JSON }}'
          API_KEYS_ARRAY=($(echo "$ALL_API_KEYS_JSON" | flatpak-spawn --host jq -r '.[]'))
          ALL_KEYS=$(printf "%s," "${API_KEYS_ARRAY[@]}")
          echo "all_api_keys=${ALL_KEYS%,}" >> $GITHUB_OUTPUT
          echo "all_api_keys_count=${#API_KEYS_ARRAY[@]}" >> $GITHUB_OUTPUT

      - name: Deploy Single src Worker for PR Preview
        if: github.event_name == 'pull_request'
        run: |
          IFS=',' read -r -a API_KEYS <<< "${{ steps.api_keys_collection.outputs.all_api_keys }}"
          
          WORKER_NAME="zen-ai-router-worker-preview-${{ github.event.pull_request.number }}"
          
          WORKER_VARS=""
          CURRENT_KEY_INDEX=1
          for j in "${!API_KEYS[@]}"; do
            if [ -n "${API_KEYS[j]}" ]; then
              ESCAPED_API_KEY=$(printf "%q" "${API_KEYS[j]}")
              WORKER_VARS="${WORKER_VARS} --var KEY${CURRENT_KEY_INDEX}:${ESCAPED_API_KEY}"
              CURRENT_KEY_INDEX=$((CURRENT_KEY_INDEX + 1))
            fi
          done

          echo "Deploying preview worker ${WORKER_NAME} with all collected keys"
          flatpak-spawn --host wrangler deploy --name "${WORKER_NAME}" \
            --compatibility-date "2024-05-01" \
            --main "src/worker.mjs" \
            ${WORKER_VARS}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          PASS: ${{ secrets.PASS }}

      - name: Comment PR with Preview URL
        if: success() # Only run if deployment was successful
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const workerName = `zen-ai-router-worker-preview-${{ github.event.pull_request.number }}`;
            const previewUrl = `https://${workerName}.workers.dev`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Worker preview for PR #${context.issue.number} deployed!\n\nPreview URL: ${previewUrl}\n\nCollected API Keys Count: ${{ steps.api_keys_collection.outputs.all_api_keys_count }}`
            });

  cleanup_preview:
    runs-on: ubuntu-latest
    name: Cleanup Preview Environment
    if: github.event.action == 'closed' # Run only when PR is closed
    steps:
      - uses: actions/checkout@v4 # Add checkout for access to files
      - name: Generate PR Environment Name
        id: vars
        run: echo "pr_environment_name=pr-${{ github.event.number }}" >> $GITHUB_OUTPUT

      - name: Prepare Worker Environment Variables for Cleanup
        id: api_keys_collection_cleanup
        run: |
          ALL_API_KEYS_JSON='${{ secrets.ALL_API_KEYS_JSON }}'
          API_KEYS_ARRAY=($(echo "$ALL_API_KEYS_JSON" | flatpak-spawn --host jq -r '.[]'))
          ALL_KEYS=$(printf "%s," "${API_KEYS_ARRAY[@]}")
          echo "all_api_keys=${ALL_KEYS%,}" >> $GITHUB_OUTPUT
          echo "all_api_keys_count=${#API_KEYS_ARRAY[@]}" >> $GITHUB_OUTPUT

      - name: Delete Preview src Workers
        run: |
          # Always attempt to delete the single worker deployed by the current deploy_preview job
          SINGLE_WORKER_NAME="zen-ai-router-worker-preview-${{ github.event.pull_request.number }}"
          echo "Attempting to delete single preview worker ${SINGLE_WORKER_NAME}"
          flatpak-spawn --host wrangler delete --name "${SINGLE_WORKER_NAME}" --force || true

          TOTAL_KEYS=${{ steps.api_keys_collection_cleanup.outputs.all_api_keys_count }}
          KEYS_PER_WORKER=8
          NUM_WORKERS=$(( (TOTAL_KEYS + KEYS_PER_WORKER - 1) / KEYS_PER_WORKER ))

          # If no keys are found, and we already attempted to delete the single worker,
          # then there are no indexed workers to delete.
          if [ "$NUM_WORKERS" -eq 0 ]; then
            echo "No indexed workers to delete based on API keys count."
          else
            for i in $(seq 0 $((NUM_WORKERS - 1))); do
              WORKER_NAME="zen-ai-router-worker-preview-${{ github.event.pull_request.number }}-${i}"
              echo "Attempting to delete indexed preview worker ${WORKER_NAME}"
              flatpak-spawn --host wrangler delete --name "${WORKER_NAME}" --force || true
            done
          fi
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

  deploy-orchestrator:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy Orchestrator Worker
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          wranglerConfigFile: 'orchestrator/wrangler.toml'
