# Task ID: 3
# Title: Implement `backend-worker-template` Logic
# Status: done
# Dependencies: 1, 2
# Priority: high
# Description: Develop the core logic for the `backend-worker-template/src/index.ts` to implement `BackendWorkerInterface` and handle forwarded requests.
# Details:
Implement the `BackendWorker` class in `backend-worker-template/src/index.ts` as follows:
```typescript
// backend-worker-template/src/index.ts
import { WorkerEntrypoint } from "cloudflare:workers";
import { BackendWorkerInterface } from "./interfaces";

export default class BackendWorker extends WorkerEntrypoint
  implements BackendWorkerInterface {

  async handleRequest(request: Request): Promise<Response> {
    const url = new URL(request.url);
    const workerName = self.name;
    console.log(`Backend Worker ${workerName} received request for path: ${url.pathname}`);
    return new Response(`Hello from Backend Worker: ${workerName} (path: ${url.pathname})`);
  }

  async fetch(request: Request, env: unknown, ctx: ExecutionContext): Promise<Response> {
    return this.handleRequest(request);
  }
}
```

# Test Strategy:
Manually deploy a single backend worker (e.g., using `wrangler publish --name my-test-backend`) and send a direct HTTP request to its URL. Verify that it responds with the expected 'Hello from Backend Worker' message and logs the request path.
